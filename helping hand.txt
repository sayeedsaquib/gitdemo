Aditya kumar:
#include<iostream>
using namespace std;

class Endowment{
    private:
    // public:
    string endowmentId;
    string holderName;
    string endowmentType;
    string registrationDate;
    public:
    virtual double calculateEndowment()=0;
    
    void setendowmentId(string endowmentId){
        this->endowmentId=endowmentId;
    }
    
    string getendowmentId(){
        return endowmentId;
    }
    void setholderName(string holderName){
        this->holderName=holderName;
    }
    
    string getholderName(){
        return holderName;
    }
    void setendowmentType(string endowmentType){
        this->endowmentType=endowmentType;
    }
    string getendowmentType(){
        return endowmentType;
    }
    void setregistrationDate(string registrationDate){
        this->registrationDate=registrationDate;
    }
    string getregistrationDate(){
        return registrationDate;
    }
    
    Endowment(){}
    Endowment(string endowmentId,string holderName,string endowmentType,string registrationDate){
        this->endowmentId=endowmentId;
        this->holderName=holderName;
        this->endowmentType=endowmentType;
        this->registrationDate=registrationDate;
    }
};

class EducationalEndowment: public Endowment{
    private:
    // public:
    string educationalInstitution;
    string educationalDivision;
    public:
    
    void seteducationalInstitution(string educationalInstitution){
        this->educationalInstitution=educationalInstitution;
    }
    string geteducationalInstitution(){
        return educationalInstitution;
    }
    void seteducationalDivision(string educationalDivision){
        this->educationalDivision=educationalDivision;
    }
    string geteducationalDivision(){
        return educationalDivision;
    }
    
    EducationalEndowment(){}
    EducationalEndowment(string endowmentId, string holderName, string endowmentType,string registrationDate, string educationalInstitution, string educationalDivision){
        this->educationalInstitution=educationalInstitution;
        this->educationalDivision=educationalDivision;
    }
    
    double calculateEndowment(){
        double amount=0;
        if(educationalDivision=="School")
        amount=30000;
        else if(educationalDivision=="UnderGraduate")
        amount=60000;
        else if(educationalDivision=="PostGraduate")
        amount=90000;
    return amount;
    }
    
};

class HealthEndowment: public Endowment{
    private:
    // public:
    string healthCareCenter;
    int holderAge;
    public:
    void sethealthCareCenter(string healthCareCenter){
        this->healthCareCenter=healthCareCenter;
    }
     string gethealthCareCenter(){
         return healthCareCenter;
     }
    void setholderAge(int holderAge){
        this->holderAge=holderAge;
    }
    int getholderAge(){
        return holderAge;
    }
    HealthEndowment(){}
    HealthEndowment(string endowmentId,string holderName,string endowmentType,string registrationDate,string healthCareCenter,int holderAge){
        this->healthCareCenter=healthCareCenter;
        this->holderAge=holderAge;
    }
    double calculateEndowment(){
        double amount=0;
        if(holderAge<=30)
        amount=120000;
        else if(holderAge> 30 && holderAge<=60)
        amount=200000;
        else if(holderAge>=60)
        amount=500000;
    return amount;
    }
};



int main(){
    Endowment *education, *health;
    string id, name, type, date, ins, div, center;
    int age;
    double amount;
    cout<<"Enter Endowment Id"<<endl;
    cin>>id;
    cout<<"Enter Holder Name"<<endl;
    cin>>name;
    cout<<"Enter Endowment Type"<<endl;
    cin>>type;
    cout<<"Enter Registration Date"<<endl;
    cin>>date;
    if(type=="educational")
    {
        cout<<"Enter Educational Institution"<<endl;

cin>>ins;
        cout<<"Enter Educational Division"<<endl;
        cin>>div;
        education=new EducationalEndowment(id,name,type,date,ins,div);
        amount=education->calculateEndowment();
        cout<<"Endowment Amount "<<amount<<endl;
    }
    else if(type=="health"){
        cout<<"Enter Health Care Center"<<endl;
        cin>>center;
        cout<<"Enter Holder Age "<<endl;
        cin>>age;
        health=new HealthEndowment(id,name,type,date,center,age);
        amount=health->calculateEndowment();
        cout<<"Endowment Amount "<<amount<<endl;
    }
    return 0;
}